# GitHub Actions Workflow responsible for cleaning up the IntelliJ Platform Plugin Template repository from the template-specific files and configurations.
# This workflow is supposed to be triggered automatically when a new template-based repository has been created.
# Source: https://github.com/JetBrains/intellij-platform-plugin-template/blob/main/.github/workflows/template-cleanup.yml

name: Template Cleanup
on:
  push:
    branches: [main]

jobs:

  # Run a cleaning process only if the workflow is triggered by the non-"php-openapi-client-template" repository.
  template-cleanup:
    name: Template Cleanup
    runs-on: ubuntu-latest
    if: github.event.repository.name != 'php-openapi-client-template'
    permissions:
      contents: write
    steps:

      # Check out the current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Cleanup project
      - name: Cleanup
        run: |
          export LC_CTYPE=C
          export LANG=C

          # Prepare variables
          NAME="${GITHUB_REPOSITORY##*/}"
          ACTOR=$(echo $GITHUB_ACTOR | tr '[:upper:]' '[:lower:]')
          SAFE_NAME=$(echo $NAME | sed 's/[^a-zA-Z0-9]//g' | tr '[:upper:]' '[:lower:]')
          SAFE_ACTOR=$(echo $ACTOR | sed 's/[^a-zA-Z0-9]//g' | tr '[:upper:]' '[:lower:]')

          # Replace placeholders in the template-cleanup files
          sed -i "s/%NAME%/$NAME/g" .github/template-cleanup/*
          sed -i "s/%REPOSITORY%/${GITHUB_REPOSITORY/\//\\/}/g" .github/template-cleanup/*

          find src -type f -exec sed -i "s/myvendor/$SAFE_ACTOR/g" {} +
          find src -type f -exec sed -i "s/mynamespace/$SAFE_NAME/g" {} +

          find .github/template-cleanup -type f -exec sed -i "s/myvendor/$SAFE_ACTOR/g" {} +
          find .github/template-cleanup -type f -exec sed -i "s/mynamespace/$SAFE_NAME/g" {} +

          # Move content
          cp -R .github/template-cleanup/. .

          # Cleanup
          rm -rf \
            .github/template-cleanup \
            .github/workflows/template-cleanup.yml \
            LICENSE

      # Commit modified files
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Template cleanup"

      # Push changes
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}

  generate:
    name: Initial client generation
    needs: 
      - template-cleanup

    runs-on: ubuntu-latest
    if: github.event.repository.name != 'php-openapi-client-template'
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP with PECL extension
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Generate API client
      run: php vendor/bin/jane-openapi generate
    
    - name: Run php-cs-fixer
      uses: docker://oskarstark/php-cs-fixer-ga

    - uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: Apply php-cs-fixer changes